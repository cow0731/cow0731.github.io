{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/python-operator","result":{"data":{"markdownRemark":{"id":"57fe1212-9eef-50c6-83b8-cee64a6e4d4c","html":"<h2 id=\"1-연산자-비교\" style=\"position:relative;\"><a href=\"#1-%EC%97%B0%EC%82%B0%EC%9E%90-%EB%B9%84%EA%B5%90\" aria-label=\"1 연산자 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 연산자 비교</h2>\n<h3 id=\"1-1-is-와-\" style=\"position:relative;\"><a href=\"#1-1-is-%EC%99%80-\" aria-label=\"1 1 is 와  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1. is 와 ==</h3>\n<blockquote>\n<h3 id=\"is\" style=\"position:relative;\"><a href=\"#is\" aria-label=\"is permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>is</h3>\n</blockquote>\n<ul>\n<li>identity 연산자</li>\n<li>\n<p>reference comparison (참조 비교)</p>\n<blockquote>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>==</h3>\n</blockquote>\n</li>\n<li>비교 연산자</li>\n<li>value comparison (값 비교)</li>\n</ul>\n<p><img src=\"/media/is_op_1.png\"></p>\n<p>위의 예시에서는 변수가 달라도 값이 같으면 is든 ==이든 모두 True가 나왔습니다.</p>\n<p>이번엔 값을 다르게해보겠습니다.</p>\n<p><img src=\"/media/is_op_2.png\"></p>\n<p>이번에는 값이 같으니 ==는 True가 나왔지만 is는 False가 나왔습니다.</p>\n<p>이유는 다음 이미지에서 확인할 수 있습니다.</p>\n<p><img src=\"/media/is_op_3.png\"></p>\n<p>id 메소드는 객체의 주소값은 아니고 주소값과 매칭되는 유니크한 int값을 반환합니다.\n아까 값이 1이었던 두 변수는 주소값이 같은 걸 볼 수 있고,\n값이 257이었던 두 변수는 주소값이 다른 걸 확인할 수 있습니다.\n즉, is는 주소값을 비교하여 같으면 True, 다르면 False를 반환합니다.</p>\n<p>파이썬의 메모리 주소 할당원리를 완벽히는 모르지만,\nint로 따지면 -5~256 까지의 작은 숫자는 파이썬 내부적으로 캐시돼있어서\n다른 변수에 같은 값을 넣어도 같은 메모리 주소를 참조합니다.\n하지만 257이상의 숫자는 다른변수에 정의하면 값이 같아도 다른 주소에 할당됩니다.</p>\n<p>String도 ‘teemo’같이 짧은건 같은 주소에 할당되지만,\n‘teemo is the cutest champion in league of legends’와 같이 긴건 다른 주소에 할당됩니다.</p>\n<h3 id=\"1-2-and-와-\" style=\"position:relative;\"><a href=\"#1-2-and-%EC%99%80-\" aria-label=\"1 2 and 와  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2. and 와 &#x26;</h3>\n<blockquote>\n<h3 id=\"and\" style=\"position:relative;\"><a href=\"#and\" aria-label=\"and permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>and</h3>\n</blockquote>\n<ul>\n<li>논리 연산자</li>\n<li>\n<p>True, False 연산</p>\n<blockquote>\n<h3 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x26;</h3>\n</blockquote>\n</li>\n<li>비교 연산자</li>\n<li>bitwise 연산자</li>\n</ul>\n<p><a href=\"https://docs.python.org/2/reference/expressions.html#boolean-operations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docs</a>에 나온 and 연산자의 설명입니다.</p>\n<p>The expression x and y first evaluates x; if x is false, its value is returned; otherwise, y is evaluated and the resulting value is returned.</p>\n<p>즉, x and y 가 있으면 x가 False면 x를 반환하고, x가 True면 y값을 반환합니다.\n<img src=\"/media/and_1.png\"></p>\n<p>8 &#x26; 10 을 이진수로 표현하면 1000 &#x26; 1010 과 같은데 이 결과는 1000이 되므로 8이 반환됩니다.\n그리고 0을 제외한 모든 숫자는 True이므로, 8 and 10 은 8이 True이고 10이 반환됩니다.\n0 and 100과 100 and 0은 0이 False이므로 0이 반환됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token keyword\">and</span> <span class=\"token number\">7</span>\n<span class=\"token number\">7</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">7</span>\n<span class=\"token number\">4</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">7</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">4</span>\n<span class=\"token number\">4</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1100</span> <span class=\"token operator\">&amp;</span>  <span class=\"token number\">1011</span>\n<span class=\"token number\">64</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">12</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">11</span>\n<span class=\"token number\">8</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">12</span> <span class=\"token keyword\">and</span> <span class=\"token number\">11</span>\n<span class=\"token number\">11</span></code></pre></div>\n<p>&#x26; 연산은 비트연산이므로 2진법으로 변환 후 하나하나 비교해서 교집합을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">0b1100</span> <span class=\"token keyword\">and</span> <span class=\"token number\">0b1011</span>\n<span class=\"token number\">11</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">0b1100</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b1011</span>\n<span class=\"token number\">8</span></code></pre></div>\n<p>2진법 숫자로 나타내고 싶을 땐 숫자 앞에 0b를 붙여서 쓰면 된다.</p>\n<h3 id=\"1-3-or-과-\" style=\"position:relative;\"><a href=\"#1-3-or-%EA%B3%BC-\" aria-label=\"1 3 or 과  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-3. or 과 |</h3>\n<blockquote>\n<h3 id=\"or\" style=\"position:relative;\"><a href=\"#or\" aria-label=\"or permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>or</h3>\n</blockquote>\n<ul>\n<li>논리 연산자</li>\n<li>\n<p>True, False 연산</p>\n<blockquote>\n<h3 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>|</h3>\n</blockquote>\n</li>\n<li>비교 연산자</li>\n<li>bitwise 연산자</li>\n</ul>\n<p><a href=\"https://docs.python.org/2/reference/expressions.html#boolean-operations\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docs</a>에 나온 or 연산자의 설명입니다.</p>\n<p>The expression x or y first evaluates x; if x is true, its value is returned; otherwise, y is evaluated and the resulting value is returned.</p>\n<p>즉, x or y 가 있으면 x가 True면 x가 반환되고, x가 False면 y값을 반환합니다.</p>\n<p><img src=\"/media/or_1.png\"></p>\n<p>8 or 10 은 8이 True이므로 8이 반환됩니다.\n8 ⎪ 10 은 이진수로 표현하면 1000 ⎪ 1010 이고, 이 결과는 1010이 되므로 10이 반환됩니다.\n0 or 100 과 100 or 0 은 0이 False고 100이 True이므로 100이 반환됩니다.</p>\n<h3 id=\"1-4-not-과-\" style=\"position:relative;\"><a href=\"#1-4-not-%EA%B3%BC-\" aria-label=\"1 4 not 과  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-4. not 과 ~</h3>\n<blockquote>\n<h3 id=\"not\" style=\"position:relative;\"><a href=\"#not\" aria-label=\"not permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>not</h3>\n</blockquote>\n<ul>\n<li>논리 연산자</li>\n<li>\n<p>True, False 연산</p>\n<blockquote>\n<h3 id=\"-3\" style=\"position:relative;\"><a href=\"#-3\" aria-label=\" 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>~</h3>\n</blockquote>\n</li>\n<li>비교 연산자</li>\n<li>bitwise 연산자</li>\n</ul>\n<p><img src=\"/media/not_1.png\"></p>\n<p>7은 True니까 not 7은 반대인 False가 나왔고</p>\n<p>0은 False니까 not 0은 반대인 True가 나왔습니다.</p>\n<p>~7은 이진수로 나타내면 ~0111 이고, ~는 0은 1, 1은 0이 되므로</p>\n<p>1000이고 십진법으론 -8이 됩니다.(보수가 됩니다)</p>\n<p>(이진법의 음수에 대한 설명은 여기에 있습니다)</p>\n<p>마찬가지로 ~0은 0의 보수인 -1이 나오게 됩니다.</p>\n<h2 id=\"2-연산자-우선순위\" style=\"position:relative;\"><a href=\"#2-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"2 연산자 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 연산자 우선순위</h2>\n<table>\n<thead>\n<tr>\n<th>우선순위</th>\n<th>연산자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>(값…), [값…], {키: 값…}, {값…}</td>\n<td>튜플, 리스트, 딕셔너리, 세트 생성</td>\n</tr>\n<tr>\n<td>2</td>\n<td>x[인덱스],x[인덱스:인덱스],x(인수…), x.속성</td>\n<td>리스트(튜플) 첨자, 슬라이싱, 함수 호출, 속성 참조</td>\n</tr>\n<tr>\n<td>3</td>\n<td>await x</td>\n<td>await 표현식</td>\n</tr>\n<tr>\n<td>4</td>\n<td>**</td>\n<td>거듭제곱</td>\n</tr>\n<tr>\n<td>5</td>\n<td>+x, -x, ~x</td>\n<td>단항 덧셈(양의 부호), 단항 뺄셈(음의 부호), 비트 NOT</td>\n</tr>\n<tr>\n<td>6</td>\n<td>*, @, /, //, %</td>\n<td>곱셈, 행렬 곱셈, 나눗셈, 버림 나눗셈, 나머지</td>\n</tr>\n<tr>\n<td>7</td>\n<td>+, -</td>\n<td>덧셈, 뺄셈</td>\n</tr>\n<tr>\n<td>8</td>\n<td>&#x3C;&#x3C;, >></td>\n<td>비트 시프트</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&#x26;</td>\n<td>비트 AND</td>\n</tr>\n<tr>\n<td>10</td>\n<td>^</td>\n<td>비트 XOR</td>\n</tr>\n<tr>\n<td>11</td>\n<td>\\ </td>\n<td>비트 OR</td>\n</tr>\n<tr>\n<td>12</td>\n<td>in, not in, is, is not, &#x3C;, &#x3C;=, >, >=, !=, ==</td>\n<td>포함 연산자, 객체 비교 연산자, 비교 연산자</td>\n</tr>\n<tr>\n<td>13</td>\n<td>not x</td>\n<td>논리 NOT</td>\n</tr>\n<tr>\n<td>14</td>\n<td>and</td>\n<td>논리 AND</td>\n</tr>\n<tr>\n<td>15</td>\n<td>or</td>\n<td>논리 OR</td>\n</tr>\n<tr>\n<td>16</td>\n<td>if else</td>\n<td>조건부 표현식</td>\n</tr>\n<tr>\n<td>17</td>\n<td>lambda</td>\n<td>람다 표현식</td>\n</tr>\n</tbody>\n</table>\n<br>\n<br>\n<h4 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h4>\n<blockquote>\n<ol>\n<li>연산자 비교\n<a href=\"https://onsil-thegreenhouse.github.io/programming/python/2017/10/22/operator/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://onsil-thegreenhouse.github.io/programming/python/2017/10/22/operator/</a></li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li>연산자 우선순위\n<a href=\"https://dojang.io/mod/page/view.php?id=2460\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dojang.io/mod/page/view.php?id=2460</a>\n<a href=\"https://dojang.io/mod/page/view.php?id=2461\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://dojang.io/mod/page/view.php?id=2461</a></li>\n</ol>","fields":{"slug":"/posts/python-operator","tagSlugs":["/tag/python/","/tag/we-code/"]},"frontmatter":{"date":"2020-04-30T22:40:32.169Z","description":"파이썬의 연산자를 비교하여 설명하고 우선순위를 알려준다.","tags":["Python","WeCode"],"title":"Python 연산자","socialImage":"/media/TIL.jpg"}}},"pageContext":{"slug":"/posts/python-operator"}}}